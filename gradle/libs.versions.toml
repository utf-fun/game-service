[versions]
slf4j = "2.0.13"
tinylog = "2.7.0"
docker = "3.4.1"
javalin = "6.6.0"
jackson = "2.19.0"
retrofit = "3.0.0"
junit = "5.7.1"
hermes = "2.1.10"
kryo = "5.6.2"
minestom = "2025.07.26-1.21.8"
minestom-pvp = "56a831b41c"
schem = "e2fd8df4a3"
buildformat = "1.0.19"
postgresql = "42.7.7"
ui-toolkit = "1.0.1"
creative = "1.9.1"
adventure-minimessage = "4.22.0"
arena = "1.2.16"
kubernetes = "24.0.0"
hikaricp = "6.3.0"
netty = "4.1.119.Final"

[libraries]
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version = "26.0.2" }
docker = { module = "com.github.docker-java:docker-java", version.ref = "docker" }
docker-transport = { module = "com.github.docker-java:docker-java-transport-zerodep", version.ref = "docker" }
javalin = { module = "io.javalin:javalin", version.ref = "javalin" }
jackson = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version = "4.12.0" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit" }
kryo = { module = "com.esotericsoftware:kryo", version.ref = "kryo" }
hermes-core = { module = "org.readutf.hermes:core", version.ref = "hermes" }
hermes-netty = { module = "org.readutf.hermes:netty", version.ref = "hermes" }
hermes-kryo = { module = "org.readutf.hermes:kryo", version.ref = "hermes" }
tinylog-api = { module = "org.tinylog:tinylog-api", version.ref = "tinylog" }
tinylog-impl = { module = "org.tinylog:tinylog-impl", version.ref = "tinylog" }
slf4j-tinylog = { module = "org.tinylog:slf4j-tinylog", version.ref = "tinylog" }
minestom = { module = "net.minestom:minestom", version.ref = "minestom" }
schem = { module = "dev.hollowcube:schem", version.ref = "schem" }
buildformat-common = { module = "org.readutf.buildformat:common", version.ref = "buildformat" }
buildformat-sql = { module = "org.readutf.buildformat:sql", version.ref = "buildformat" }
buildformat-s3 = { module = "org.readutf.buildformat:s3", version.ref = "buildformat" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
ui-toolkit = { module = "org.readutf.ui:ui-toolkit", version.ref = "ui-toolkit" }
creative-api = { module = "team.unnamed:creative-api", version.ref = "creative" }
creative-serializer-minecraft = { module = "team.unnamed:creative-serializer-minecraft", version.ref = "creative" }
creative-server = { module = "team.unnamed:creative-server", version.ref = "creative" }
adventure-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure-minimessage" }
arena-core = { module = "org.readutf.arena:core", version.ref = "arena" }
arena-minestom = { module = "org.readutf.arena:minestom", version.ref = "arena" }
kubernetes-client = { module = "io.kubernetes:client-java", version.ref = "kubernetes" }
minestom-pvp = { module = "com.github.TogAr2:MinestomPvP", version.ref = "minestom-pvp" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
netty = { module = "io.netty:netty-all", version.ref = "netty" }

[bundles]
tinylog = [
    "tinylog-api",
    "tinylog-impl",
    "slf4j-tinylog",
]

hermes = [
    "hermes-core",
    "hermes-netty",
    "hermes-kryo",
]

buildformat = [
    "buildformat-common",
    "buildformat-sql",
    "buildformat-s3",
]

creative = [
    "creative-api",
    "creative-serializer-minecraft",
    "creative-server",
]

arena = [
    "arena-core",
    "arena-minestom",
]